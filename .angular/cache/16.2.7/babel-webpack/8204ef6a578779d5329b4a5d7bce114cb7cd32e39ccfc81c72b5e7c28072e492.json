{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientregisterService {\n  constructor(http) {\n    this.http = http;\n  }\n  loadAllUserInfo() {\n    return this.http.get(\"http://localhost:3000/alluserinfo\");\n  }\n  // STORE DATA IN JSON FILE\n  // parameters: url, object in json form\n  storeUserInfo(userdetails) {\n    return this.http.post(\"http://localhost:5000/alluserinfo\", userdetails);\n  }\n  static #_ = this.ɵfac = function ClientregisterService_Factory(t) {\n    return new (t || ClientregisterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientregisterService,\n    factory: ClientregisterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ClientregisterService","constructor","http","loadAllUserInfo","get","storeUserInfo","userdetails","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/matthew/Downloads/CourseEndProject1/meeting-manager-app/src/app/services/clientregister.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Clientregister } from '../classes/clientregister';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientregisterService {\n\n  constructor(public http:HttpClient) { }\n\n  loadAllUserInfo():Observable<Clientregister[]> {\n    return this.http.get<Clientregister[]>(\"http://localhost:3000/alluserinfo\");\n  }\n\n  // STORE DATA IN JSON FILE\n  // parameters: url, object in json form\n  storeUserInfo(userdetails:any):any {\n    return this.http.post(\"http://localhost:5000/alluserinfo\", userdetails);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,qBAAqB;EAEhCC,YAAmBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEtCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAmB,mCAAmC,CAAC;EAC7E;EAEA;EACA;EACAC,aAAaA,CAACC,WAAe;IAC3B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,mCAAmC,EAAED,WAAW,CAAC;EACzE;EAAC,QAAAE,CAAA,G;qBAZUR,qBAAqB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBb,qBAAqB;IAAAc,OAAA,EAArBd,qBAAqB,CAAAe,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}